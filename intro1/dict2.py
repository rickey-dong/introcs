work = [
'Luke,1,0,1,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Han,1,1,1,1,1,1,1,0.5,1,0,1,1,0,1,1,0.5,0,0,1,1,1,1,1,0,1',
'Leia,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Lando,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'John,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Paul,1,1,1,1,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'George,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Ringo,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Ed,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Jeff,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1',
'Stone,1,1,1,1,0.5,1,1,1,0.5,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1',
'Bob,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Dave,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Chris,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Jason,1,1,1,1,1,1,1,1,1,1,0.5,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1',
'Mal,1,1,1,1,1,1,1,0.5,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Wash,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Jayne,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1',
'Kaylee,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'River,1,1,1,1,1,1,0,0.5,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1',
'Book,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Donny,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Dude,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Walter,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Jean-Luc,1,0,1,1,1,1,1,0.5,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1,0,0',
'William,0,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Jordi,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'James,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1',
'Philip,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Hubert,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Turonga,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1',
'Hermes,1,1,1,1,1,1,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1'
]

tests = [
'Luke,90,81,86,80,92,88,85,78,85,78',
'Han,85,86,85,84,82,88,93,82,93,82',
'Leia,94,93,83,91,90,92,95,78,95,78',
'Lando,100,100,100,92,99,93.3,95,100,95,100',
'John,95,80,94,90,94,89.33,93,88,93,88',
'Paul,95,100,98,89,98,88,95,100,95,100',
'George,82,87,93,88,81,89.33,93,79,93,79',
'Ringo,92,95,89,83,90,89.3,88,100,88,100',
'Ed,98,90,91,83,84,92,88,88,88,88',
'Jeff,90,86,96,87,89,88,88,86,88,86',
'Stone,87,83,73,69,78,89.3,92,60,92,60',
'Bob,97,94,98,92,87,92,98,100,98,100',
'Dave,91,77,98,88,78,92,92,80,92,80',
'Chris,93,64,82,93,95,89.3,88,96,88,96',
'Jason,89,89,71,91,84,89.33,85,89,85,89',
'Mal,93,84,75,79,74,88,85,73,85,73',
'Wash,100,98,100,90,97,89.3,94,95,94,95',
'Jayne,92,85,85,90,91,90.67,93,93,93,93',
'Kaylee,96,100,97,94,93,89.3,88,98,88,98',
'River,87,93,92,88,92,89.33,85,63,85,63',
'Book,94,91,86,87,89,92,88,83,88,83',
'Donny,91,85,80,72,90,89.3,93,70,93,70',
'Dude,100,98,100,86,92,92,95,90,95,90',
'Walter,96,89,87,89,95,92,93,94,93,94',
'Jean-Luc,98,79,62,87,79,92,85,47,85,47',
'William,95,93,92,91,97,88,88,100,88,100',
'Jordi,98,96,92,92,100,93.3,95,100,95,100',
'James,98,98,100,95,100,94.67,96,100,96,100',
'Philip,94,89,93,73,90,90.67,93,93,93,93',
'Hubert,97,97,94,95,98,89.3,93,99,93,99',
'Turonga,100,97,100,98,92,94.67,98,100,98,100',
'Hermes,94,92,96,80,87,89.3,85,100,85,100'
]

def grade_dict(listofstrings):
    d = {}
    counter = 0
    while counter < len(listofstrings):
        substringcounter = 0
        score = 1
        newlist = (listofstrings[counter]).split(',')
        d[(newlist[substringcounter])] = []
        while score < len(newlist):
            d[(newlist[substringcounter])] += [float(newlist[score])]
            score += 1
        counter += 1
    return d

print(grade_dict(work))
print(grade_dict(tests))

def avg_dict(dictionary):
    d = {}
    total = 0
    person = 0
    score = 0
    namelist = list(dictionary.keys())
    for name in namelist:
        d[name] = []
    listofscores = list(dictionary.values())
    while person < len(listofscores):
        total = 0
        score = 0
        while score < len(listofscores[person]):
            total += (listofscores[person])[score]
            score += 1
        average = (total)/(len(listofscores[person]))
        d[(namelist[person])] = average
        person += 1
    return d

test_dict = grade_dict(tests)
work_dict = grade_dict(work)
print(avg_dict(test_dict))
print(avg_dict(work_dict))

def full_grades(testsavg, workavg):
    d = {}
    person = 0
    namelist = list(testsavg.keys())
    for name in namelist:
        d[name] = []
    testlist = list(testsavg.values())
    hwlist = list(workavg.values())
    while person < len(testlist):
        d[(namelist[person])] = ((testlist[person] / 100) * 70) + (hwlist[person] * 30)
        person += 1
    return d

testaverage = avg_dict(test_dict)
workaverage = avg_dict(work_dict)
print(full_grades(testaverage, workaverage))